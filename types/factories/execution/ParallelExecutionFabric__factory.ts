/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ParallelExecutionFabric,
  ParallelExecutionFabricInterface,
} from "../../execution/ParallelExecutionFabric";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fromShard",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toShard",
        type: "uint256",
      },
    ],
    name: "CrossShardSync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "taskId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shardId",
        type: "uint256",
      },
    ],
    name: "ParallelExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ValidationComplete",
    type: "event",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "transactions",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "shardId",
        type: "uint256",
      },
    ],
    name: "executeParallel",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executedProposals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "shardValidators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "systemPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userShards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107e7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633566414c146100675780635759a3c31461009f57806376671808146100ca5780639d2f83f0146100e1578063a9f2945c146100ee578063ab8ae95f1461010e575b600080fd5b61008a6100753660046104b5565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100b26100ad3660046104ce565b610121565b6040516001600160a01b039091168152602001610096565b6100d360045481565b604051908152602001610096565b60035461008a9060ff1681565b6100d36100fc366004610508565b60006020819052908152604090205481565b61008a61011c36600461059b565b610159565b6001602052816000526040600020818154811061013d57600080fd5b6000918252602090912001546001600160a01b03169150829050565b60035460009060ff16156101a75760405162461bcd60e51b815260206004820152601060248201526f14de5cdd195b481a5cc81c185d5cd95960821b60448201526064015b60405180910390fd5b61010082106101eb5760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a59081cda185c9908125160821b604482015260640161019e565b6040516bffffffffffffffffffffffff193360601b1660208201526034810183905242605482015260009060740160405160208183030381529060405280519060200120905060005b845181101561047057600080868381518110610252576102526106a7565b602002602001015180602001905181019061026d91906106e1565b915091506000848460405160200161028f929190918252602082015260400190565b60408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff16156102fa5760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b604482015260640161019e565b600081815260026020526040808220805460ff19166001179055516001600160a01b0385169061032b90859061076e565b6000604051808303816000865af19150503d8060008114610368576040519150601f19603f3d011682016040523d82523d6000602084013e61036d565b606091505b50509050817fa668712c0b8f59efdf687dfbc672df6d8a1ab624717f5dfd9a794099f3ad4884826040516103a5911515815260200190565b60405180910390a2806103e85760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b604482015260640161019e565b6001600160a01b0384166000908152602081905260409020548814610459576001600160a01b038416600090815260208181526040918290205482519081529081018a90527f0c454ae3e3bbbd6dbb40457c8ab78c582bdbc783de1ba4520fe92b7b1813b66d910160405180910390a15b5050505080806104689061078a565b915050610234565b50807f2c32f00f669708cbac9eefc892e885de3b99ba86f3cae0129be4a8d09136475f846040516104a391815260200190565b60405180910390a25060019392505050565b6000602082840312156104c757600080fd5b5035919050565b600080604083850312156104e157600080fd5b50508035926020909101359150565b6001600160a01b038116811461050557600080fd5b50565b60006020828403121561051a57600080fd5b8135610525816104f0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561056b5761056b61052c565b604052919050565b600067ffffffffffffffff82111561058d5761058d61052c565b50601f01601f191660200190565b60008060408084860312156105af57600080fd5b833567ffffffffffffffff808211156105c757600080fd5b818601915086601f8301126105db57600080fd5b81356020828211156105ef576105ef61052c565b8160051b6105fe828201610542565b928352848101820192828101908b85111561061857600080fd5b83870192505b84831015610695578235868111156106365760008081fd5b8701603f81018d136106485760008081fd5b8481013561065d61065882610573565b610542565b8181528e8b8385010111156106725760008081fd5b818b8401888301376000918101870191909152835250918301919083019061061e565b9b999092013599505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60005b838110156106d85781810151838201526020016106c0565b50506000910152565b600080604083850312156106f457600080fd5b82516106ff816104f0565b602084015190925067ffffffffffffffff81111561071c57600080fd5b8301601f8101851361072d57600080fd5b805161073b61065882610573565b81815286602083850101111561075057600080fd5b6107618260208301602086016106bd565b8093505050509250929050565b600082516107808184602087016106bd565b9190910192915050565b6000600182016107aa57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220c72b49cdcc228eefc14425bf3b660f09d4193448c93aece66a8c795e2c50954264736f6c63430008150033";

type ParallelExecutionFabricConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParallelExecutionFabricConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ParallelExecutionFabric__factory extends ContractFactory {
  constructor(...args: ParallelExecutionFabricConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ParallelExecutionFabric> {
    return super.deploy(overrides || {}) as Promise<ParallelExecutionFabric>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ParallelExecutionFabric {
    return super.attach(address) as ParallelExecutionFabric;
  }
  override connect(signer: Signer): ParallelExecutionFabric__factory {
    return super.connect(signer) as ParallelExecutionFabric__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParallelExecutionFabricInterface {
    return new utils.Interface(_abi) as ParallelExecutionFabricInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParallelExecutionFabric {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ParallelExecutionFabric;
  }
}
